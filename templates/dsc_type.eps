require 'puppet/resource_api'

Puppet::ResourceApi.register_type(
  name: 'dsc_<%= $resource.name %>',
  dscmeta_resource_friendly_name: '<%= $resource.friendlyname %>',
  dscmeta_resource_name: '<%= $resource.resourcetype %>',
  dscmeta_module_name: '<%= $resource.modulename %>',
  dscmeta_module_version: '<%= $resource.version %>',
  docs: %q{
    The DSC <%= $resource.friendlyname %> resource type.
    Automatically generated from version <%= $resource.version %>
  },
  features: ['simple_get_filter'],
  attributes: {
    ensure: {
      type:    'Enum[present, absent]',
      desc:    'Whether this resource should be present or absent on the target system.',
      default: 'present',
    },
    name: {
      type:      'String',
      desc:      'Description of the purpose for this resource declaration.',
      behaviour: :namevar,
    },
<% $resource.ParameterInfo | Each { -%>
    dsc_<%= $_.name -%>: {
      type: <%= $_.Type %>,
      desc: %q{
        <%= $_.Help %>
      },
<%= if($_.mandatory_for_get -eq 'true'){"      behaviour: :namevar,`n"} -%>
      mandatory_for_get: <%= $_.mandatory_for_get %>,
      mandatory_for_set: <%= $_.mandatory_for_set %>,
      mof_type: '<%= $_.mof_type %>',
      mof_is_embedded: <%= $_.mof_is_embedded %>,
    },
<% }  -%>
  },
)
