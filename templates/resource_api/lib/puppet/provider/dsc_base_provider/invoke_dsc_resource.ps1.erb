$invokeParams = @{
  Name          = '<%= resource[:dscmeta_resource_friendly_name] %>'
  Method        = '<%= resource[:dsc_invoke_method] %>'
  Property      = @{
<% resource[:parameters].each do |p, v| -%>
  <%- name = p.to_s.gsub(/^dsc_/,'')
  if name == 'ensure' && resource[:dsc_invoke_method] == 'test'
    value = "\'#{p[:ensure].default.to_s}\'"
  elsif v[:mof_type] == 'PSCredential'
    value = PuppetX::DscApi::TemplateHelpers.format_pscredential(v[:value])
  elsif v[:mof_is_embedded] == true && v[:mof_type] != 'MSFT_KeyValuePair'
    value = PuppetX::DscApi::TemplateHelpers.format_cim_instance(v[:value], v[:mof_type])
  else
    value = PuppetX::DscApi::TemplateHelpers.format_dsc_value(v[:value])
  end
  -%>
    <%= name %> = <%= value %>
<% end -%>
  }<% if resource.key?(:dscmeta_module_version) %>
  ModuleName = @{
    ModuleName      = <%= "\"#{resource[:vendored_modules_path]}/#{resource[:dscmeta_module_name]}/#{resource[:dscmeta_module_name]}.psd1\"" %>
    RequiredVersion = <%= "\"#{resource[:dscmeta_module_version]}\"" %>
  }
<% else %>
  ModuleName = <%= "\"#{resource[:dscmeta_module_name]}\"" %>
<% end -%>
}
